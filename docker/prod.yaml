volumes:
  db_data:

services:
  db:
    image: postgres:14.1-alpine
    env_file: envs/prod.env
    volumes:
     - db_data:/var/lib/postgresql/data
     - ../src/db/scripts:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    healthcheck:
      test: pg_isready -q -U $${POSTGRES_USER}
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6.2.6-alpine
    healthcheck:
      test: redis-cli ping

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 16686:16686

  nginx:
    image: nginx:1.21.6-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/:/etc/nginx/conf.d/:ro
    ports:
      - 8000:8000
    depends_on:
      - auth

  auth:
    build:
      context: ..
      dockerfile: docker/dockerfiles/AuthDockerfile
      target: prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: envs/prod.env

